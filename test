#!/bin/bash

ME=$(dirname $0)

NO_FILTER=0
if [ "$1" == "--no-filter" ];
then
        NO_FILTER=1
        shift
fi

if [ "$1" == "" -o "$1" == "-h" -o "$1" == "--help" ];
then
        echo "test: the a-mir-formality test harness"
        echo ""
	echo "expected one of:"
        echo "  $0 [--no-filter] file.rkt      run a single test file" 
        echo "  $0 --all                       run all tests"
        echo "  $0 file1.rkt file2.rkt ...     run a particular set of tests"
        echo ""
        echo "When you run a single test file, the backtraces will be better"
        echo "because we enable racket's improved backtrace support."
        echo "Also, when running a single test, logs are filtered through a"
        echo "script that makes the indentation compatible with VSCode's code folding."
        exit 1
fi

NPROC=$(getconf _NPROCESSORS_ONLN 2> /dev/null || getconf NPROCESSORS_ONLN 2> /dev/null || 4) # number of CPU cores

if [ "$1" == "--all" ]; then
        echo "running: raco test -t -j $NPROC src"
        time raco test -t -j $NPROC src
elif [ "$2" != "" -o -d "$1" ]; then
        echo "running: raco test -t -j $NPROC $@"
        time raco test -t -j $NPROC "$@"
else
	REQUIRE='(require (submod "'"$1"'" test))'
	echo racket -l errortrace -l racket/base -e "$REQUIRE"
	if [ "$NO_FILTER" == "1" ];
	then
		racket -l errortrace -l racket/base -e "$REQUIRE"
	else
		racket -l errortrace -l racket/base -e "$REQUIRE" 2>&1 | python3 $ME/reformat-logs.py
	fi
fi
